#!/usr/bin/env node

var _ = require('lodash');
var path = require('path');
var glob = require("glob")
var front = require('front-matter');
var fs = require('fs-extra');

var optimist = require('optimist')
    .usage('Precompile handlebar templates.\nUsage: $0 template...', {
      't': {
        'type': 'string',
        'description': 'Template',
        'alias': 'tpl'
      }
    })
    .check(function(argv) {
      if (argv.version) {
        return;
      }
    });

var Handlebars = require('handlebars');
var layouts = require('handlebars-layouts');
// some pretty usefull helpers I can use here!
require('handlebars-helpers').register(Handlebars, {});
layouts(Handlebars);

//Get partials
var tplPath = 'templates/*.hbs';
glob(tplPath, {}, function(er, files) {
    //Register partials
    _.each(files, function(file) {
        var name = path.basename(file, '.hbs');
        //console.log('Register partial: ' + name);
        var contents = fs.readFileSync(file).toString();
        //console.log('Register partial: ' + name);
        Handlebars.registerPartial(name, contents);
    });


    var templatePath = optimist.argv['t'];
    var template = fs.readFileSync(templatePath, 'utf-8');

    var files = optimist.argv._;
    var paginate = {
        files: []
    };

    _.each(files, function(path) {
        var file = {
            path: path
        };
        paginate.files.push(file);
    });

    template = Handlebars.compile(template);
    console.log(template({
        path: 'index.html',
        paginate:paginate
    }));
});
