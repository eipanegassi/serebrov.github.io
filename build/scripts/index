#!/usr/bin/env node

var _ = require('lodash');
var path = require('path');
var fs = require('fs-extra');

var optimist = require('optimist')
    .usage('Precompile handlebar templates.\nUsage: $0 template...', {
      't': {
        'type': 'string',
        'description': 'Template',
        'alias': 'tpl'
      }
    })
    .check(function(argv) {
      if (argv.version) {
        return;
      }
    });

var registerPatials = require('./lib/registerPartials');
var tplPath = 'build/templates/*.hbs';

registerPatials.register(tplPath)
.then(function(Handlebars) {

    var templatePath = optimist.argv['t'];
    var template = fs.readFileSync(templatePath, 'utf-8');

    var files = optimist.argv._;
    var paginate = {
        files: []
    };

    _.each(files, function(path) {
        var metaPath = path.replace(".html",".json");
        var meta = fs.readFileSync(metaPath, 'utf-8');
        meta = JSON.parse(meta);
        if (meta.intro) {
            meta.intro = new Handlebars.SafeString(meta.intro);
        }
        meta.path = path;
        paginate.files.push(meta);
    });

    template = Handlebars.compile(template);
    console.log(template({
        path: 'index.html',
        paginate:paginate
    }));
});
